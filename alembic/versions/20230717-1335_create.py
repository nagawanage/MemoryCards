"""create

Revision ID: afbf3bcb9318
Revises: 
Create Date: 2023-07-17 13:35:21.830014

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'afbf3bcb9318'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('todos',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_title'), 'todos', ['title'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('email_verified', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('hashed_password', sa.Text(), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_table('words',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('user_id', sa.String(length=10), nullable=False, comment='ユーザーID'),
    sa.Column('category_id', mysql.JSON(), nullable=False, comment='カテゴリID'),
    sa.Column('group_id', mysql.JSON(), nullable=False, comment='単語帳グループID'),
    sa.Column('word', sa.String(length=255), nullable=False, comment='単語名'),
    sa.Column('meaning', sa.String(length=255), nullable=False, comment='意味'),
    sa.Column('hint', sa.String(length=255), nullable=False, comment='ヒント'),
    sa.Column('note', mysql.JSON(), nullable=False, comment='メモ'),
    sa.Column('check1_updated_at', sa.TIMESTAMP(), nullable=False, comment='チェックマーク1更新日時'),
    sa.Column('check2_updated_at', sa.TIMESTAMP(), nullable=False, comment='チェックマーク2更新日時'),
    sa.Column('check3_updated_at', sa.TIMESTAMP(), nullable=False, comment='チェックマーク3更新日時'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('todos_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('todo_id', sa.String(length=10), nullable=False),
    sa.Column('tag_id', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['todo_id'], ['todos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('todo_id', 'tag_id', name='ix_todos_tags_todo_id_tag_id')
    )
    op.create_index(op.f('ix_todos_tags_tag_id'), 'todos_tags', ['tag_id'], unique=False)
    op.create_index(op.f('ix_todos_tags_todo_id'), 'todos_tags', ['todo_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_todos_tags_todo_id'), table_name='todos_tags')
    op.drop_index(op.f('ix_todos_tags_tag_id'), table_name='todos_tags')
    op.drop_table('todos_tags')
    op.drop_table('words')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_todos_title'), table_name='todos')
    op.drop_table('todos')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
